'use client';
import { useState, useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card, CardContent, CardHeader } from '@/components/ui/card';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { User, Phone, MapPin, ArrowRight } from 'lucide-react';

const countriesWithFlags = [
  { name: 'Afghanistan', flag: 'ðŸ‡¦ðŸ‡«' },
  { name: 'Albania', flag: 'ðŸ‡¦ðŸ‡±' },
  { name: 'Algeria', flag: 'ðŸ‡©ðŸ‡¿' },
  { name: 'Andorra', flag: 'ðŸ‡¦ðŸ‡©' },
  { name: 'Angola', flag: 'ðŸ‡¦ðŸ‡´' },
  { name: 'Antigua and Barbuda', flag: 'ðŸ‡¦ðŸ‡¬' },
  { name: 'Argentina', flag: 'ðŸ‡¦ðŸ‡·' },
  { name: 'Armenia', flag: 'ðŸ‡¦ðŸ‡²' },
  { name: 'Australia', flag: 'ðŸ‡¦ðŸ‡º' },
  { name: 'Austria', flag: 'ðŸ‡¦ðŸ‡¹' },
  { name: 'Azerbaijan', flag: 'ðŸ‡¦ðŸ‡¿' },
  { name: 'Bahamas', flag: 'ðŸ‡§ðŸ‡¸' },
  { name: 'Bahrain', flag: 'ðŸ‡§ðŸ‡­' },
  { name: 'Bangladesh', flag: 'ðŸ‡§ðŸ‡©' },
  { name: 'Barbados', flag: 'ðŸ‡§ðŸ‡§' },
  { name: 'Belarus', flag: 'ðŸ‡§ðŸ‡¾' },
  { name: 'Belgium', flag: 'ðŸ‡§ðŸ‡ª' },
  { name: 'Belize', flag: 'ðŸ‡§ðŸ‡¿' },
  { name: 'Benin', flag: 'ðŸ‡§ðŸ‡¯' },
  { name: 'Bhutan', flag: 'ðŸ‡§ðŸ‡¹' },
  { name: 'Bolivia', flag: 'ðŸ‡§ðŸ‡´' },
  { name: 'Bosnia and Herzegovina', flag: 'ðŸ‡§ðŸ‡¦' },
  { name: 'Botswana', flag: 'ðŸ‡§ðŸ‡¼' },
  { name: 'Brazil', flag: 'ðŸ‡§ðŸ‡·' },
  { name: 'Brunei', flag: 'ðŸ‡§ðŸ‡³' },
  { name: 'Bulgaria', flag: 'ðŸ‡§ðŸ‡¬' },
  { name: 'Burkina Faso', flag: 'ðŸ‡§ðŸ‡«' },
  { name: 'Burundi', flag: 'ðŸ‡§ðŸ‡®' },
  { name: 'Cabo Verde', flag: 'ðŸ‡¨ðŸ‡»' },
  { name: 'Cambodia', flag: 'ðŸ‡°ðŸ‡­' },
  { name: 'Cameroon', flag: 'ðŸ‡¨ðŸ‡²' },
  { name: 'Canada', flag: 'ðŸ‡¨ðŸ‡¦' },
  { name: 'Central African Republic', flag: 'ðŸ‡¨ðŸ‡«' },
  { name: 'Chad', flag: 'ðŸ‡¹ðŸ‡©' },
  { name: 'Chile', flag: 'ðŸ‡¨ðŸ‡±' },
  { name: 'China', flag: 'ðŸ‡¨ðŸ‡³' },
  { name: 'Colombia', flag: 'ðŸ‡¨ðŸ‡´' },
  { name: 'Comoros', flag: 'ðŸ‡°ðŸ‡²' },
  { name: 'Congo', flag: 'ðŸ‡¨ðŸ‡¬' },
  { name: 'Costa Rica', flag: 'ðŸ‡¨ðŸ‡·' },
  { name: 'Croatia', flag: 'ðŸ‡­ðŸ‡·' },
  { name: 'Cuba', flag: 'ðŸ‡¨ðŸ‡º' },
  { name: 'Cyprus', flag: 'ðŸ‡¨ðŸ‡¾' },
  { name: 'Czech Republic', flag: 'ðŸ‡¨ðŸ‡¿' },
  { name: 'Democratic Republic of the Congo', flag: 'ðŸ‡¨ðŸ‡©' },
  { name: 'Denmark', flag: 'ðŸ‡©ðŸ‡°' },
  { name: 'Djibouti', flag: 'ðŸ‡©ðŸ‡¯' },
  { name: 'Dominica', flag: 'ðŸ‡©ðŸ‡²' },
  { name: 'Dominican Republic', flag: 'ðŸ‡©ðŸ‡´' },
  { name: 'Ecuador', flag: 'ðŸ‡ªðŸ‡¨' },
  { name: 'Egypt', flag: 'ðŸ‡ªðŸ‡¬' },
  { name: 'El Salvador', flag: 'ðŸ‡¸ðŸ‡»' },
  { name: 'Equatorial Guinea', flag: 'ðŸ‡¬ðŸ‡¶' },
  { name: 'Eritrea', flag: 'ðŸ‡ªðŸ‡·' },
  { name: 'Estonia', flag: 'ðŸ‡ªðŸ‡ª' },
  { name: 'Eswatini', flag: 'ðŸ‡¸ðŸ‡¿' },
  { name: 'Ethiopia', flag: 'ðŸ‡ªðŸ‡¹' },
  { name: 'Fiji', flag: 'ðŸ‡«ðŸ‡¯' },
  { name: 'Finland', flag: 'ðŸ‡«ðŸ‡®' },
  { name: 'France', flag: 'ðŸ‡«ðŸ‡·' },
  { name: 'Gabon', flag: 'ðŸ‡¬ðŸ‡¦' },
  { name: 'Gambia', flag: 'ðŸ‡¬ðŸ‡²' },
  { name: 'Georgia', flag: 'ðŸ‡¬ðŸ‡ª' },
  { name: 'Germany', flag: 'ðŸ‡©ðŸ‡ª' },
  { name: 'Ghana', flag: 'ðŸ‡¬ðŸ‡­' },
  { name: 'Greece', flag: 'ðŸ‡¬ðŸ‡·' },
  { name: 'Grenada', flag: 'ðŸ‡¬ðŸ‡©' },
  { name: 'Guatemala', flag: 'ðŸ‡¬ðŸ‡¹' },
  { name: 'Guinea', flag: 'ðŸ‡¬ðŸ‡³' },
  { name: 'Guinea-Bissau', flag: 'ðŸ‡¬ðŸ‡¼' },
  { name: 'Guyana', flag: 'ðŸ‡¬ðŸ‡¾' },
  { name: 'Haiti', flag: 'ðŸ‡­ðŸ‡¹' },
  { name: 'Honduras', flag: 'ðŸ‡­ðŸ‡³' },
  { name: 'Hungary', flag: 'ðŸ‡­ðŸ‡º' },
  { name: 'Iceland', flag: 'ðŸ‡®ðŸ‡¸' },
  { name: 'India', flag: 'ðŸ‡®ðŸ‡³' },
  { name: 'Indonesia', flag: 'ðŸ‡®ðŸ‡©' },
  { name: 'Iran', flag: 'ðŸ‡®ðŸ‡·' },
  { name: 'Iraq', flag: 'ðŸ‡®ðŸ‡¶' },
  { name: 'Ireland', flag: 'ðŸ‡®ðŸ‡ª' },
  { name: 'Israel', flag: 'ðŸ‡®ðŸ‡±' },
  { name: 'Italy', flag: 'ðŸ‡®ðŸ‡¹' },
  { name: 'Ivory Coast', flag: 'ðŸ‡¨ðŸ‡®' },
  { name: 'Jamaica', flag: 'ðŸ‡¯ðŸ‡²' },
  { name: 'Japan', flag: 'ðŸ‡¯ðŸ‡µ' },
  { name: 'Jordan', flag: 'ðŸ‡¯ðŸ‡´' },
  { name: 'Kazakhstan', flag: 'ðŸ‡°ðŸ‡¿' },
  { name: 'Kenya', flag: 'ðŸ‡°ðŸ‡ª' },
  { name: 'Kiribati', flag: 'ðŸ‡°ðŸ‡®' },
  { name: 'Kuwait', flag: 'ðŸ‡°ðŸ‡¼' },
  { name: 'Kyrgyzstan', flag: 'ðŸ‡°ðŸ‡¬' },
  { name: 'Laos', flag: 'ðŸ‡±ðŸ‡¦' },
  { name: 'Latvia', flag: 'ðŸ‡±ðŸ‡»' },
  { name: 'Lebanon', flag: 'ðŸ‡±ðŸ‡§' },
  { name: 'Lesotho', flag: 'ðŸ‡±ðŸ‡¸' },
  { name: 'Liberia', flag: 'ðŸ‡±ðŸ‡·' },
  { name: 'Libya', flag: 'ðŸ‡±ðŸ‡¾' },
  { name: 'Liechtenstein', flag: 'ðŸ‡±ðŸ‡®' },
  { name: 'Lithuania', flag: 'ðŸ‡±ðŸ‡¹' },
  { name: 'Luxembourg', flag: 'ðŸ‡±ðŸ‡º' },
  { name: 'Madagascar', flag: 'ðŸ‡²ðŸ‡¬' },
  { name: 'Malawi', flag: 'ðŸ‡²ðŸ‡¼' },
  { name: 'Malaysia', flag: 'ðŸ‡²ðŸ‡¾' },
  { name: 'Maldives', flag: 'ðŸ‡²ðŸ‡»' },
  { name: 'Mali', flag: 'ðŸ‡²ðŸ‡±' },
  { name: 'Malta', flag: 'ðŸ‡²ðŸ‡¹' },
  { name: 'Marshall Islands', flag: 'ðŸ‡²ðŸ‡­' },
  { name: 'Mauritania', flag: 'ðŸ‡²ðŸ‡·' },
  { name: 'Mauritius', flag: 'ðŸ‡²ðŸ‡º' },
  { name: 'Mexico', flag: 'ðŸ‡²ðŸ‡½' },
  { name: 'Micronesia', flag: 'ðŸ‡«ðŸ‡²' },
  { name: 'Moldova', flag: 'ðŸ‡²ðŸ‡©' },
  { name: 'Monaco', flag: 'ðŸ‡²ðŸ‡¨' },
  { name: 'Mongolia', flag: 'ðŸ‡²ðŸ‡³' },
  { name: 'Montenegro', flag: 'ðŸ‡²ðŸ‡ª' },
  { name: 'Morocco', flag: 'ðŸ‡²ðŸ‡¦' },
  { name: 'Mozambique', flag: 'ðŸ‡²ðŸ‡¿' },
  { name: 'Myanmar', flag: 'ðŸ‡²ðŸ‡²' },
  { name: 'Namibia', flag: 'ðŸ‡³ðŸ‡¦' },
  { name: 'Nauru', flag: 'ðŸ‡³ðŸ‡·' },
  { name: 'Nepal', flag: 'ðŸ‡³ðŸ‡µ' },
  { name: 'Netherlands', flag: 'ðŸ‡³ðŸ‡±' },
  { name: 'New Zealand', flag: 'ðŸ‡³ðŸ‡¿' },
  { name: 'Nicaragua', flag: 'ðŸ‡³ðŸ‡®' },
  { name: 'Niger', flag: 'ðŸ‡³ðŸ‡ª' },
  { name: 'Nigeria', flag: 'ðŸ‡³ðŸ‡¬' },
  { name: 'North Korea', flag: 'ðŸ‡°ðŸ‡µ' },
  { name: 'North Macedonia', flag: 'ðŸ‡²ðŸ‡°' },
  { name: 'Norway', flag: 'ðŸ‡³ðŸ‡´' },
  { name: 'Oman', flag: 'ðŸ‡´ðŸ‡²' },
  { name: 'Pakistan', flag: 'ðŸ‡µðŸ‡°' },
  { name: 'Palau', flag: 'ðŸ‡µðŸ‡¼' },
  { name: 'Palestine', flag: 'ðŸ‡µðŸ‡¸' },
  { name: 'Panama', flag: 'ðŸ‡µðŸ‡¦' },
  { name: 'Papua New Guinea', flag: 'ðŸ‡µðŸ‡¬' },
  { name: 'Paraguay', flag: 'ðŸ‡µðŸ‡¾' },
  { name: 'Peru', flag: 'ðŸ‡µðŸ‡ª' },
  { name: 'Philippines', flag: 'ðŸ‡µðŸ‡­' },
  { name: 'Poland', flag: 'ðŸ‡µðŸ‡±' },
  { name: 'Portugal', flag: 'ðŸ‡µðŸ‡¹' },
  { name: 'Qatar', flag: 'ðŸ‡¶ðŸ‡¦' },
  { name: 'Romania', flag: 'ðŸ‡·ðŸ‡´' },
  { name: 'Russia', flag: 'ðŸ‡·ðŸ‡º' },
  { name: 'Rwanda', flag: 'ðŸ‡·ðŸ‡¼' },
  { name: 'Saint Kitts and Nevis', flag: 'ðŸ‡°ðŸ‡³' },
  { name: 'Saint Lucia', flag: 'ðŸ‡±ðŸ‡¨' },
  { name: 'Saint Vincent and the Grenadines', flag: 'ðŸ‡»ðŸ‡¨' },
  { name: 'Samoa', flag: 'ðŸ‡¼ðŸ‡¸' },
  { name: 'San Marino', flag: 'ðŸ‡¸ðŸ‡²' },
  { name: 'Sao Tome and Principe', flag: 'ðŸ‡¸ðŸ‡¹' },
  { name: 'Saudi Arabia', flag: 'ðŸ‡¸ðŸ‡¦' },
  { name: 'Senegal', flag: 'ðŸ‡¸ðŸ‡³' },
  { name: 'Serbia', flag: 'ðŸ‡·ðŸ‡¸' },
  { name: 'Seychelles', flag: 'ðŸ‡¸ðŸ‡¨' },
  { name: 'Sierra Leone', flag: 'ðŸ‡¸ðŸ‡±' },
  { name: 'Singapore', flag: 'ðŸ‡¸ðŸ‡¬' },
  { name: 'Slovakia', flag: 'ðŸ‡¸ðŸ‡°' },
  { name: 'Slovenia', flag: 'ðŸ‡¸ðŸ‡®' },
  { name: 'Solomon Islands', flag: 'ðŸ‡¸ðŸ‡§' },
  { name: 'Somalia', flag: 'ðŸ‡¸ðŸ‡´' },
  { name: 'South Africa', flag: 'ðŸ‡¿ðŸ‡¦' },
  { name: 'South Korea', flag: 'ðŸ‡°ðŸ‡·' },
  { name: 'South Sudan', flag: 'ðŸ‡¸ðŸ‡¸' },
  { name: 'Spain', flag: 'ðŸ‡ªðŸ‡¸' },
  { name: 'Sri Lanka', flag: 'ðŸ‡±ðŸ‡°' },
  { name: 'Sudan', flag: 'ðŸ‡¸ðŸ‡©' },
  { name: 'Suriname', flag: 'ðŸ‡¸ðŸ‡·' },
  { name: 'Sweden', flag: 'ðŸ‡¸ðŸ‡ª' },
  { name: 'Switzerland', flag: 'ðŸ‡¨ðŸ‡­' },
  { name: 'Syria', flag: 'ðŸ‡¸ðŸ‡¾' },
  { name: 'Taiwan', flag: 'ðŸ‡¹ðŸ‡¼' },
  { name: 'Tajikistan', flag: 'ðŸ‡¹ðŸ‡¯' },
  { name: 'Tanzania', flag: 'ðŸ‡¹ðŸ‡¿' },
  { name: 'Thailand', flag: 'ðŸ‡¹ðŸ‡­' },
  { name: 'Timor-Leste', flag: 'ðŸ‡¹ðŸ‡±' },
  { name: 'Togo', flag: 'ðŸ‡¹ðŸ‡¬' },
  { name: 'Tonga', flag: 'ðŸ‡¹ðŸ‡´' },
  { name: 'Trinidad and Tobago', flag: 'ðŸ‡¹ðŸ‡¹' },
  { name: 'Tunisia', flag: 'ðŸ‡¹ðŸ‡³' },
  { name: 'Turkey', flag: 'ðŸ‡¹ðŸ‡·' },
  { name: 'Turkmenistan', flag: 'ðŸ‡¹ðŸ‡²' },
  { name: 'Tuvalu', flag: 'ðŸ‡¹ðŸ‡»' },
  { name: 'Uganda', flag: 'ðŸ‡ºðŸ‡¬' },
  { name: 'Ukraine', flag: 'ðŸ‡ºðŸ‡¦' },
  { name: 'United Arab Emirates', flag: 'ðŸ‡¦ðŸ‡ª' },
  { name: 'United Kingdom', flag: 'ðŸ‡¬ðŸ‡§' },
  { name: 'United States', flag: 'ðŸ‡ºðŸ‡¸' },
  { name: 'Uruguay', flag: 'ðŸ‡ºðŸ‡¾' },
  { name: 'Uzbekistan', flag: 'ðŸ‡ºðŸ‡¿' },
  { name: 'Vanuatu', flag: 'ðŸ‡»ðŸ‡º' },
  { name: 'Vatican City', flag: 'ðŸ‡»ðŸ‡¦' },
  { name: 'Venezuela', flag: 'ðŸ‡»ðŸ‡ª' },
  { name: 'Vietnam', flag: 'ðŸ‡»ðŸ‡³' },
  { name: 'Yemen', flag: 'ðŸ‡¾ðŸ‡ª' },
  { name: 'Zambia', flag: 'ðŸ‡¿ðŸ‡²' },
  { name: 'Zimbabwe', flag: 'ðŸ‡¿ðŸ‡¼' }
];

export default function OnboardingPage() {
    const navigate = useNavigate();
    const location = useLocation();
    const { username, password } = location.state || {};

    const [firstName, setFirstName] = useState('');
    const [lastName, setLastName] = useState('');
    const [phone, setPhone] = useState('');
    const [country, setCountry] = useState('');
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState('');

    useEffect(() => {
        if (!username || !password) {
            navigate('/signup');
        }
    }, [username, password, navigate]);

    const handleComplete = async () => {
        if (!firstName.trim() || !lastName.trim()) {
            setError('First name and last name are required');
            return;
        }

        setIsLoading(true);
        setError('');
        
        try {
            const response = await fetch(`${import.meta.env.VITE_API_URL}/api/accounts/signup`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ 
                    username, 
                    password, 
                    firstName, 
                    lastName, 
                    phone: phone || null, 
                    country: country || null 
                }),
            });

            if (!response.ok) {
                const errorData = await response.text();
                throw new Error(errorData || 'Signup failed');
            }

            const data = await response.json();
            localStorage.setItem('token', data.token);
            navigate('/todo');
        } catch (err) {
            setError(err.message || 'Signup failed. Please try again.');
        } finally {
            setIsLoading(false);
        }
    };

    if (!username || !password) {
        return (
            <div className="min-h-screen bg-gradient-board flex items-center justify-center p-6">
                <div className="text-center text-muted-foreground">Redirecting...</div>
            </div>
        );
    }

    return (
        <div className="min-h-screen bg-gradient-board flex items-center justify-center p-6">
            <div className="w-full max-w-md mx-auto">
                <Card className="shadow-card hover:shadow-card-hover transition-all duration-200">
                    <CardHeader className="text-center pb-6">
                        <div className="mx-auto w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4">
                            <User className="w-6 h-6 text-primary" />
                        </div>
                        <h1 className="text-2xl font-bold text-foreground">Complete Your Profile</h1>
                        <p className="text-muted-foreground">Tell us a bit more about yourself</p>
                    </CardHeader>
                    <CardContent className="space-y-4">
                        {error && (
                            <div className="bg-destructive/10 border border-destructive/20 text-destructive px-4 py-3 rounded-lg text-sm">
                                {error}
                            </div>
                        )}
                        <form
                            onSubmit={(e) => {
                                e.preventDefault();
                                handleComplete();
                            }}
                            className="space-y-4"
                        >
                            <div className="space-y-2">
                                <label className="text-sm font-medium text-foreground">First Name *</label>
                                <div className="relative">
                                    <User className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
                                    <Input
                                        value={firstName}
                                        onChange={(e) => setFirstName(e.target.value)}
                                        type="text"
                                        placeholder="Enter your first name"
                                        className="pl-10"
                                        required
                                    />
                                </div>
                            </div>

                            <div className="space-y-2">
                                <label className="text-sm font-medium text-foreground">Last Name *</label>
                                <div className="relative">
                                    <User className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
                                    <Input
                                        value={lastName}
                                        onChange={(e) => setLastName(e.target.value)}
                                        type="text"
                                        placeholder="Enter your last name"
                                        className="pl-10"
                                        required
                                    />
                                </div>
                            </div>
                            
                            <div className="space-y-2">
                                <label className="text-sm font-medium text-foreground">Phone Number</label>
                                <div className="relative">
                                    <Phone className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
                                    <Input
                                        value={phone}
                                        onChange={(e) => {
                                            const value = e.target.value.replace(/\D/g, '');
                                            setPhone(value);
                                        }}
                                        type="tel"
                                        placeholder="Enter your phone number"
                                        className="pl-10"
                                        inputMode="numeric"
                                        pattern="[0-9]*"
                                    />
                                </div>
                            </div>

                            <div className="space-y-2">
                                <label className="text-sm font-medium text-foreground">Country</label>
                                <div className="relative">
                                    <MapPin className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground z-10" />
                                    <Select value={country} onValueChange={setCountry}>
                                        <SelectTrigger className="pl-10">
                                            <SelectValue placeholder="Select your country" />
                                        </SelectTrigger>
                                        <SelectContent>
                                            {countriesWithFlags.map((countryOption) => (
                                                <SelectItem key={countryOption.name} value={countryOption.name}>
                                                    <span className="flex items-center gap-2">
                                                        <span>{countryOption.flag}</span>
                                                        <span>{countryOption.name}</span>
                                                    </span>
                                                </SelectItem>
                                            ))}
                                        </SelectContent>
                                    </Select>
                                </div>
                            </div>

                            <Button 
                                type="submit" 
                                className="w-full gap-2 mt-6"
                                disabled={isLoading}
                            >
                                {isLoading ? (
                                    <>
                                        <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-primary-foreground"></div>
                                        Creating account...
                                    </>
                                ) : (
                                    <>
                                        <ArrowRight className="w-4 h-4" />
                                        Complete Signup
                                    </>
                                )}
                            </Button>
                        </form>
                    </CardContent>
                </Card>
            </div>
        </div>
    );
}